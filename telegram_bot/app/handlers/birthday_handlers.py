import datetime
import aiohttp
from aiohttp import FormData
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from core.config import settings
from app.utils import user_processing


scheduler = AsyncIOScheduler()
BOT_TOKEN = settings.token
BOT_SEND_MESSAGE_LINK = 'https://api.telegram.org/bot{}/sendMessage?chat_id={}'
MESSAGE = ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {}!\n"
           "–°–µ–≥–æ–¥–Ω—è —É –í–∞—Å –±–æ–ª—å—à–æ–µ —Å–æ–±—ã—Ç–∏–µ ‚Äî –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è ü•≥\n"
           "–í —á–µ—Å—Ç—å —Ç–∞–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–∞—Ä–∏–º –í–∞–º —Å–∫–∏–¥–∫—É 15% –Ω–∞ –≤—Å—ë –Ω–∞—à–µ –º–µ–Ω—é!")


async def send_message(chat_id, user_name):
    async with aiohttp.ClientSession() as session:
        formdata = FormData()
        formdata.add_field('caption', MESSAGE)
        formdata.add_field('parse_mode', 'HTML')
        response = await session.post(
            BOT_SEND_MESSAGE_LINK.format(BOT_TOKEN, chat_id),
            data={
                'text': MESSAGE.format(user_name),
                'parse_mode': 'HTML',
            },
        )
    return response


async def check_birthday():
    users = await user_processing.get_users()
    current_day = datetime.date.today()
    for user in users:
        if user["birth_day"][5:][:-13] == str(current_day)[5:]:
            await send_message(user["tg_id"], user["name"])


async def schedule_job():
    scheduler.add_job(check_birthday, 'cron', day_of_week='mon-sun', hour=15, minute=00)